When would you want to use a remote repository rather than keeping all your work
local?

    Having a remote repository allows that more than 1 person can collaborate on the same repository 
    from different computers.It can also help in the case where I am the only developer, but I 
    use different computers.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    By doing it manually I can control when I want to pull a change. 
    If I am doing some code, I do not want Git to automatically 
    pull new changes that might interfere with my work until I am 
    done with a logical change.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork allows to copy a GitHub repository from someone else into 
    another GitHub repository of my own. I would use this when I want 
    to collaborate in a project, but I either do not have permissions 
    for editing that repository, or I don't want to interfere with it 
    until I have made some changes.

    A clone allows to "download" a remote repository into a local 
    directory in my computer, so I can work with its files using 
    my computer resources. I would use this if the type of editing 
    I want to do is not as simple as editing some txt files, so I 
    need a coding environment and a compiler in my own computer.

    A branch allows to have several versions of a local repository, 
    so I can work on separate features or bug-fixes independently. 
    I would use this to make some logical change in my code which 
    I don't want to interfere with other versions of the code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    So we can have access to the commit history of the remote and make local commits 
    over it, even being offline for long periods of time.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I could use a more basic synch service, like dropbox or google 
    drive. The advantage of these is that I don't have to worry 
    about commits, pushes and pulls. The disadvantage is loosing 
    all the features of Git such as branches, conflict detection, 
    merging, repository cloning... In addition, I would have to be 
    very careful by agreeing with my collaborators what files would 
    each of us be editting at the same time.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When I want to include something new in the code, but I don't 
    want it to interfere with the master branch until it is properly 
    tested/reviewed by the involved collaborators.
